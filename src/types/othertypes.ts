
/**
 * https://osustats.respektive.pw/counts/<user_id>
 */
export type osustatsType = {
    beatmaps_amount: number,
    user_id: number,
    username: string,
    country: string,
    top1s: number,
    top1s_rank: number,
    top8s: number,
    top8s_rank: number,
    top15s: number,
    top15s_rank: number,
    top25s: number,
    top25s_rank: number,
    top50s: number,
    top50s_rank: number,
    top100s: number,
    top100s_rank: number,
};

export type geoLocale = {
    id: number,
    name: string,
    latitude: number,
    longitude: number,
    elevation: number,
    feature_code: string,
    country_code: string,
    admin1_id: number,
    admin3_id: number,
    admin4_id: number,
    timezone: string,
    population: number,
    postcodes: string[],
    country_id: number,
    country: string,
    admin1?: string,
    admin2?: string,
    admin3?: string,
    admin4?: string,
};

export type geoResults = { results: geoLocale[]; };


export type weatherData = {
    latitude: number,
    longitude: number,
    generationtime_ms: number,
    utc_offset_seconds: number,
    timezone: string,
    timezone_abbreviation: string,
    elevation: number;
    current_weather?: {
        temperature: number,
        windspeed: number,
        winddirection: number,
        weathercode: number,
        is_day: number,
        time: string;
    };
    hourly?: weatherDataTypesHourly,
    hourly_units?: weatherDataUnitsHourly,
    daily?: weatherDataTypesDaily,
    daily_units?: weatherDataUnitsDaily,
    error?: boolean,
    reason?: string;
};

type weatherDataTypesHourly = {
    time?: string[],
    temperature_2m?: number[],
    relativehumidity_2m?: number[],
    dewpoint_2m?: number[],
    apparent_temperature?: number[],
    pressure_msl?: number[],
    surface_pressure?: number[],
    cloudcover?: number[],
    cloudcover_low?: number[],
    cloudcover_mid?: number[],
    cloudcover_high?: number[],
    windspeed_10m?: number[],
    windspeed_80m?: number[],
    windspeed_120m?: number[],
    windspeed_180m?: number[],
    winddirection_10m?: number[],
    winddirection_80m?: number[],
    winddirection_120m?: number[],
    winddirection_180m?: number[],
    windgusts_10m?: number[],
    shortwave_radiation?: number[],
    direction_radiation?: number[],
    direction_normal_irradiance?: number[],
    diffuse_radiation?: number[],
    vapor_pressure_deficit?: number[],
    cape?: number[],
    evapotranspiration?: number[],
    et0_fao_evapotranspiration?: number[],
    precipitation?: number[],
    snowfall?: number[],
    precipitation_probability?: number[],
    rain?: number[],
    showers?: number[],
    weathercode?: number[],
    snow_depth?: number[],
    freezlinglevel_height?: number[],
    visibility?: number[],
    soil_temperature_0cm?: number[],
    soil_temperature_6cm?: number[],
    soil_temperature_18cm?: number[],
    soil_temperature_54cm?: number[],
    soil_moisture_0_1cm?: number[],
    soil_moisture_1_3cm?: number[],
    soil_moisture_3_9cm?: number[],
    soil_moisture_9_27cm?: number[],
    soil_moisture_27_81cm?: number[],
    is_day?: number[],
};

type weatherDataTypesDaily = {
    temperature_2m_max?: number[],
    temperature_2m_min?: number[],
    apparent_temperature_max?: number[],
    apparent_temperature_min?: number[],
    precipitation_sum?: number[],
    rain_sum?: number[],
    showers_sum?: number[],
    snowfall_sum?: number[],
    precipitation_hours?: number[],
    precipitation_probability_max?: number[],
    precipitation_probability_min?: number[],
    precipitation_probability_mean?: number[],
    weathercode?: number[],
    sunrise?: number[],
    sunset?: number[],
    windspeed_10m_max?: number[],
    windgusts_10m_max?: number[],
    winddirection_10m_dominant?: number[],
    shortwave_radiation_sum?: number[],
    et0_fao_evapotranspiration?: number[],
    uv_index_max?: number[],
    uv_index_clear_sky_max?: number[],
};

type weatherDataUnitsHourly = {
    time?: string,
    temperature_2m?: "°C" | "°F" | "°K" | "K",
    relativehumidity_2m?: string,
    dewpoint_2m?: string,
    apparent_temperature?: string,
    pressure_msl?: string,
    surface_pressure?: string,
    cloudcover?: string,
    cloudcover_low?: string,
    cloudcover_mid?: string,
    cloudcover_high?: string,
    windspeed_10m?: string,
    windspeed_80m?: string,
    windspeed_120m?: string,
    windspeed_180m?: string,
    winddirection_10m?: string,
    winddirection_80m?: string,
    winddirection_120m?: string,
    winddirection_180m?: string,
    windgusts_10m?: string,
    shortwave_radiation?: string,
    direction_radiation?: string,
    direction_normal_irradiance?: string,
    diffuse_radiation?: string,
    vapor_pressure_deficit?: string,
    cape?: string,
    evapotranspiration?: string,
    et0_fao_evapotranspiration?: string,
    precipitation?: string,
    snowfall?: string,
    precipitation_probability?: string,
    rain?: string,
    showers?: string,
    weathercode?: string,
    snow_depth?: string,
    freezlinglevel_height?: string,
    visibility?: string,
    soil_temperature_0cm?: string,
    soil_temperature_6cm?: string,
    soil_temperature_18cm?: string,
    soil_temperature_54cm?: string,
    soil_moisture_0_1cm?: string,
    soil_moisture_1_3cm?: string,
    soil_moisture_3_9cm?: string,
    soil_moisture_9_27cm?: string,
    soil_moisture_27_81cm?: string,
    is_day?: string,
};

type weatherDataUnitsDaily = {
    temperature_2m_max?: string,
    temperature_2m_min?: string,
    apparent_temperature_max?: string,
    apparent_temperature_min?: string,
    precipitation_sum?: string,
    rain_sum?: string,
    showers_sum?: string,
    snowfall_sum?: string,
    precipitation_hours?: string,
    precipitation_probability_max?: string,
    precipitation_probability_min?: string,
    precipitation_probability_mean?: string,
    weathercode?: string,
    sunrise?: string,
    sunset?: string,
    windspeed_10m_max?: string,
    windgusts_10m_max?: string,
    winddirection_10m_dominant?: string,
    shortwave_radiation_sum?: string,
    et0_fao_evapotranspiration?: string,
    uv_index_max?: string,
    uv_index_clear_sky_max?: string,
};

export type tropicalData = {
    data?: tsShort[] | tsData | tsFeatureData;
    error?: any;
};

export type tsShort = {
    id: string,
    name: string,
    details: string,
};

export type tsData = {
    id: string,
    advisory: string,
    is_active: boolean,
    name: string,
    basin: string,
    category: string,
    forecast_hours: number,
    geojson: string,
    event_number: number,
    position: number[], //position isn't given as N or S, but + and -
    movement: {
        KPH: number,
        MPH: number,
        KTS: number,
        bearing: number,
    },
    max_observed_category: string,
    max_forecast_category: string,
    name_list: string[],
    advisory_list: string[];
};

export type tsFeatureData = {
    type: string,
    features: {
        type: string,
        geometry: {
            type: string,
            coordinates: number[][],
        },
        properties: {
            featureType: string,
            id: string,
            name: string,
            basin: string,
            intensity: string,
            color: string,
            opacity: number; // out of 255?
        };
    }[],
};

//https://restcountries.com/#endpoints-all
export type countryData = {
    name: {
        common: string,
        official: string,
        nativeName: languageList,
    };
    tld: string[],
    cca2: string,
    ccn3: string,
    cca3: string,
    cioc: string,
    independent: boolean,
    status: string,
    unMember: boolean,
    currencies: currencies[],
    idd: {
        root: string,
        suffixes: string[],
    },
    capital: string[],
    altSpellings: string[],
    region: string,
    subregion: string,
    languages: languageList,
    translations: languageList,
    latlng: number[],
    landlocked: boolean,
    borders: string[];
    area: number,
    demonyms: languageList,
    flag: string,
    maps: {
        googleMaps: string,
        openStreetMaps: string,
    },
    population: number,
    gini: object,
    fifa: string,
    car: {
        signs: string[],
        side: "right" | "left";
    },
    timezones: string[],
    continents: string[],
    flags: {
        png: string,
        svg: string,
        alt: string;
    },
    coatOfArms: {
        png: string,
        svg: string;
    },
    startOfWeek: string,
    capitalInfo: {
        latlng: number[];
    },
    postalCode: {
        format: string,
        regex: string;
    };
};

export type countryDataErr = {
    status: number,
    message: string;
};

export type languageList = {
    aar?: langName | string | langDemonym,
    abk?: langName | string | langDemonym,
    afr?: langName | string | langDemonym,
    aka?: langName | string | langDemonym,
    amh?: langName | string | langDemonym,
    ara?: langName | string | langDemonym,
    arg?: langName | string | langDemonym,
    asm?: langName | string | langDemonym,
    ava?: langName | string | langDemonym,
    ave?: langName | string | langDemonym,
    aym?: langName | string | langDemonym,
    aze?: langName | string | langDemonym,
    bak?: langName | string | langDemonym,
    bam?: langName | string | langDemonym,
    bel?: langName | string | langDemonym,
    ben?: langName | string | langDemonym,
    bis?: langName | string | langDemonym,
    bod?: langName | string | langDemonym,
    bos?: langName | string | langDemonym,
    bre?: langName | string | langDemonym,
    bul?: langName | string | langDemonym,
    cat?: langName | string | langDemonym,
    ces?: langName | string | langDemonym,
    cha?: langName | string | langDemonym,
    che?: langName | string | langDemonym,
    chu?: langName | string | langDemonym,
    chv?: langName | string | langDemonym,
    cor?: langName | string | langDemonym,
    cos?: langName | string | langDemonym,
    cre?: langName | string | langDemonym,
    cym?: langName | string | langDemonym,
    dan?: langName | string | langDemonym,
    deu?: langName | string | langDemonym,
    div?: langName | string | langDemonym,
    dzo?: langName | string | langDemonym,
    ell?: langName | string | langDemonym,
    eng?: langName | string | langDemonym,
    epo?: langName | string | langDemonym,
    est?: langName | string | langDemonym,
    eus?: langName | string | langDemonym,
    ewe?: langName | string | langDemonym,
    fao?: langName | string | langDemonym,
    fas?: langName | string | langDemonym,
    fij?: langName | string | langDemonym,
    fin?: langName | string | langDemonym,
    fra?: langName | string | langDemonym,
    fry?: langName | string | langDemonym,
    ful?: langName | string | langDemonym,
    gla?: langName | string | langDemonym,
    gle?: langName | string | langDemonym,
    glg?: langName | string | langDemonym,
    glv?: langName | string | langDemonym,
    grn?: langName | string | langDemonym,
    guj?: langName | string | langDemonym,
    hat?: langName | string | langDemonym,
    hau?: langName | string | langDemonym,
    heb?: langName | string | langDemonym,
    her?: langName | string | langDemonym,
    hin?: langName | string | langDemonym,
    hmo?: langName | string | langDemonym,
    hrv?: langName | string | langDemonym,
    hun?: langName | string | langDemonym,
    hye?: langName | string | langDemonym,
    ibo?: langName | string | langDemonym,
    ido?: langName | string | langDemonym,
    iii?: langName | string | langDemonym,
    iku?: langName | string | langDemonym,
    ile?: langName | string | langDemonym,
    ina?: langName | string | langDemonym,
    ind?: langName | string | langDemonym,
    ipk?: langName | string | langDemonym,
    isl?: langName | string | langDemonym,
    ita?: langName | string | langDemonym,
    jav?: langName | string | langDemonym,
    jpn?: langName | string | langDemonym,
    kal?: langName | string | langDemonym,
    kan?: langName | string | langDemonym,
    kas?: langName | string | langDemonym,
    kat?: langName | string | langDemonym,
    kau?: langName | string | langDemonym,
    kaz?: langName | string | langDemonym,
    khm?: langName | string | langDemonym,
    kik?: langName | string | langDemonym,
    kin?: langName | string | langDemonym,
    kir?: langName | string | langDemonym,
    kom?: langName | string | langDemonym,
    kon?: langName | string | langDemonym,
    kor?: langName | string | langDemonym,
    kua?: langName | string | langDemonym,
    kur?: langName | string | langDemonym,
    lao?: langName | string | langDemonym,
    lat?: langName | string | langDemonym,
    lav?: langName | string | langDemonym,
    lim?: langName | string | langDemonym,
    lin?: langName | string | langDemonym,
    lit?: langName | string | langDemonym,
    ltz?: langName | string | langDemonym,
    lub?: langName | string | langDemonym,
    lug?: langName | string | langDemonym,
    mah?: langName | string | langDemonym,
    mal?: langName | string | langDemonym,
    mar?: langName | string | langDemonym,
    mkd?: langName | string | langDemonym,
    mlg?: langName | string | langDemonym,
    mlt?: langName | string | langDemonym,
    mon?: langName | string | langDemonym,
    mri?: langName | string | langDemonym,
    msa?: langName | string | langDemonym,
    mya?: langName | string | langDemonym,
    nau?: langName | string | langDemonym,
    nav?: langName | string | langDemonym,
    nbl?: langName | string | langDemonym,
    nde?: langName | string | langDemonym,
    ndo?: langName | string | langDemonym,
    nep?: langName | string | langDemonym,
    nld?: langName | string | langDemonym,
    nno?: langName | string | langDemonym,
    nob?: langName | string | langDemonym,
    nor?: langName | string | langDemonym,
    nya?: langName | string | langDemonym,
    oci?: langName | string | langDemonym,
    oji?: langName | string | langDemonym,
    ori?: langName | string | langDemonym,
    orm?: langName | string | langDemonym,
    oss?: langName | string | langDemonym,
    pan?: langName | string | langDemonym,
    pli?: langName | string | langDemonym,
    pol?: langName | string | langDemonym,
    por?: langName | string | langDemonym,
    pus?: langName | string | langDemonym,
    que?: langName | string | langDemonym,
    roh?: langName | string | langDemonym,
    ron?: langName | string | langDemonym,
    run?: langName | string | langDemonym,
    rus?: langName | string | langDemonym,
    sag?: langName | string | langDemonym,
    san?: langName | string | langDemonym,
    sin?: langName | string | langDemonym,
    slk?: langName | string | langDemonym,
    slv?: langName | string | langDemonym,
    sme?: langName | string | langDemonym,
    smo?: langName | string | langDemonym,
    sna?: langName | string | langDemonym,
    snd?: langName | string | langDemonym,
    som?: langName | string | langDemonym,
    sot?: langName | string | langDemonym,
    spa?: langName | string | langDemonym,
    sqi?: langName | string | langDemonym,
    srd?: langName | string | langDemonym,
    srp?: langName | string | langDemonym,
    ssw?: langName | string | langDemonym,
    sun?: langName | string | langDemonym,
    swa?: langName | string | langDemonym,
    swe?: langName | string | langDemonym,
    tah?: langName | string | langDemonym,
    tam?: langName | string | langDemonym,
    tat?: langName | string | langDemonym,
    tel?: langName | string | langDemonym,
    tgk?: langName | string | langDemonym,
    tgl?: langName | string | langDemonym,
    tha?: langName | string | langDemonym,
    tir?: langName | string | langDemonym,
    ton?: langName | string | langDemonym,
    tsn?: langName | string | langDemonym,
    tso?: langName | string | langDemonym,
    tuk?: langName | string | langDemonym,
    tur?: langName | string | langDemonym,
    twi?: langName | string | langDemonym,
    uig?: langName | string | langDemonym,
    ukr?: langName | string | langDemonym,
    urd?: langName | string | langDemonym,
    uzb?: langName | string | langDemonym,
    ven?: langName | string | langDemonym,
    vie?: langName | string | langDemonym,
    vol?: langName | string | langDemonym,
    wln?: langName | string | langDemonym,
    wol?: langName | string | langDemonym,
    xho?: langName | string | langDemonym,
    yid?: langName | string | langDemonym,
    yor?: langName | string | langDemonym,
    zha?: langName | string | langDemonym,
    cho?: langName | string | langDemonym,
    zul?: langName | string | langDemonym,
};

export type langName = {
    official: string,
    common: string,
};
export type langDemonym = {
    f: string,
    m: string,
};

export type currencies = any

export type currency = {
    name: string,
    symbol: string;
};

export type countryDataSearchTypes = 
'all' | 
'name' | 
'fullname' |
'code' |
'codes' |
'currency' |
'demonym' |
'language' |
'capital' | 
'calling' |
'region' | 
'subregion' | 
'translation' 